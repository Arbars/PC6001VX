#include <new>

#include "log.h"
#include "io.h"
#include "error.h"


////////////////////////////////////////////////////////////////
// コンストラクタ
////////////////////////////////////////////////////////////////
IO6::IO6( void ) : io(NULL), dl(NULL)
{
	INITARRAY( Iwait, 0 );
	INITARRAY( Owait, 0 );
}


////////////////////////////////////////////////////////////////
// デストラクタ
////////////////////////////////////////////////////////////////
IO6::~IO6( void )
{
	if( dl ) delete dl;
	if( io ) delete io;
}


////////////////////////////////////////////////////////////////
// 初期化
////////////////////////////////////////////////////////////////
bool IO6::Init( int banksize )
{
	// オブジェクト確保
	try{
		dl = new DeviceList;	// デバイスリスト
		io = new IOBus;			// I/O
		
		if( !io->Init( dl, banksize ) ) throw Error::InitFailed;
	}
	catch( std::bad_alloc ){	// new に失敗した場合
		Error::SetError( Error::MemAllocFailed );
		if( dl ){ delete dl; dl = NULL; }
		return false;
	}
	// 例外発生
	catch( Error::Errno i ){
		Error::SetError( i );
		return false;
	}
	
	for( int i=0; i<BANKSIZE; i++ ) Iwait[i] = Owait[i] = 0;
	
	return true;
}


////////////////////////////////////////////////////////////////
// デバイス接続
////////////////////////////////////////////////////////////////
bool IO6::Connect( IDevice* device, const IOBus::Connector* connector )
{
	return io->Connect( device, connector );
}


////////////////////////////////////////////////////////////////
// デバイス切断
////////////////////////////////////////////////////////////////
bool IO6::Disconnect( IDevice* device )
{
	return io->Disconnect( device );
}


////////////////////////////////////////////////////////////////
// IN関数
////////////////////////////////////////////////////////////////
BYTE IO6::In( int port, int *wcnt )
{
	PRINTD( IO_LOG, "[IO][In] port : %02X\n", port&0xff );
	
	if( wcnt ) (*wcnt) += Iwait[port&0xff];
	return io->In( port );
}


////////////////////////////////////////////////////////////////
// OUT関数
////////////////////////////////////////////////////////////////
void IO6::Out( int port, BYTE data, int *wcnt )
{
	PRINTD( IO_LOG, "[IO][Out] port : %02X  data : %02X\n", port&0xff, data );
	
	if( wcnt ) (*wcnt) += Owait[port&0xff];
	io->Out( port, data );
}


////////////////////////////////////////////////////////////////
// IN ウェイト設定
////////////////////////////////////////////////////////////////
void IO6::SetInWait( int port, int wait )
{
	Iwait[port&0xff] = wait;
}


////////////////////////////////////////////////////////////////
// OUTウェイト設定
////////////////////////////////////////////////////////////////
void IO6::SetOutWait( int port, int wait )
{
	Owait[port&0xff] = wait;
}


////////////////////////////////////////////////////////////////
// IN ウェイト取得
////////////////////////////////////////////////////////////////
int IO6::GetInWait( int port )
{
	return Iwait[port&0xff];
}


////////////////////////////////////////////////////////////////
// IN ウェイト取得
////////////////////////////////////////////////////////////////
int IO6::GetOutWait( int port )
{
	return Owait[port&0xff];
}
